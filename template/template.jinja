{#
Copyright 2016 Google Inc. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}


{% set CLUSTER_NAME = properties['clusterName'] %}
{% set TYPE_NAME = CLUSTER_NAME + '-type' %}
{% set K8S_ENDPOINTS = {'': 'api/v1', '-apps': 'apis/apps/v1beta1', '-v1beta1-extensions': 'apis/extensions/v1beta1'} %}
{% set project = env['project'] %}
{% set bucket = properties['bucketName'] %}
{% set topic = env['deployment'] + '-' + env['name'] + '-topic' %}
{% set subscription = env['deployment'] + '-' + env['name'] + '-subscription' %}
{% set deployment = env['deployment'] %}


resources:
- name: {{ CLUSTER_NAME }}
  type: container.v1.cluster
  properties:
    zone: {{ properties['zone'] }}
    cluster:
      name: {{ CLUSTER_NAME }}
      initialNodeCount: {{ properties['initialNodeCount'] }}
      masterAuth:
        username: {{ properties['username'] }}
        password: {{ properties['password'] }}
      nodeConfig:
        machineType: {{ properties['machineType'] }}
        diskSizeGb: {{ properties['diskSizeGb'] }}
        oauthScopes:
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring
{% for typeSuffix, endpoint in K8S_ENDPOINTS.iteritems() %}
- name: {{ TYPE_NAME }}{{ typeSuffix }}
  type: deploymentmanager.v2beta.typeProvider
  properties:
    options:
      validationOptions:
        # Kubernetes API accepts ints, in fields they annotate with string.
        # This validation will show as warning rather than failure for
        # Deployment Manager.
        # https://github.com/kubernetes/kubernetes/issues/2971
        schemaValidation: IGNORE_WITH_WARNINGS
      # According to kubernetes spec, the path parameter 'name'
      # should be the value inside the metadata field
      # https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md
      # This mapping specifies that
      inputMappings:
      - fieldName: name
        location: PATH
        methodMatch: ^(GET|DELETE|PUT)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: metadata.name
        location: BODY
        methodMatch: ^(PUT|POST)$
        value: $.ifNull($.resource.properties.metadata.name, $.resource.name)
      - fieldName: Authorization
        location: HEADER
        value: >
          $.concat("Bearer ", $.googleOauth2AccessToken())
    descriptorUrl: https://$(ref.{{ CLUSTER_NAME }}.endpoint)/swaggerapi/{{ endpoint }}
{% endfor %}

- name: my-build
  action: gcp-types/cloudbuild-v1:cloudbuild.projects.builds.create
  metadata:
    runtimePolicy:
    - CREATE
  properties:
    steps:
    - name: 'gcr.io/cloud-builders/gsutil'
      args: ['cp', 'gs://gke-spinnaker-codelab/services.tgz', 'gs://{{ bucket}}/services.tgz']

    - name: 'gcr.io/cloud-builders/gsutil'
      args: ['cp', 'gs://gke-spinnaker-codelab/front50.tgz', 'gs://{{ bucket}}/front50.tgz']

    - name: 'gcr.io/cloud-builders/docker'
      args: ['pull', 'gcr.io/spinnaker-marketplace/frontend']


    - name: 'gcr.io/cloud-builders/docker'
      args: ['tag', 'gcr.io/spinnaker-marketplace/frontend', 'gcr.io/{{ project }}/frontend']

    - name: 'gcr.io/cloud-builders/docker'
      args: ['pull', 'gcr.io/spinnaker-marketplace/backend']

    - name: 'gcr.io/cloud-builders/docker'
      args: ['tag', 'gcr.io/spinnaker-marketplace/backend', 'gcr.io/{{ project }}/backend']

    images:
    -  'gcr.io/{{ project }}/frontend'
    -  'gcr.io/{{ project }}/backend'


- name: my-topic
  #type: pubsub.v1.topic
  type: gcp-types/pubsub-v1:projects.topics
  properties:
    topic: {{ topic }}
- name: my-subscription
  #type: pubsub.v1.subscription
  type: gcp-types/pubsub-v1:projects.subscriptions
  properties:
    subscription: {{ subscription }}
    topic: $(ref.my-topic.name)

- name: {{ deployment }}-svc-account
  type: iam.v1.serviceAccount
  properties:
    accountId: {{ deployment }}-svc-account
    displayName: {{ deployment }}-svc-account

- name: get-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.getIamPolicy
  properties:
    resource: {{ project }}
  metadata:
    runtimePolicy:
    - 'UPDATE_ALWAYS'

- name: patch-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.setIamPolicy
  properties:
    resource: {{ project }}
    policy: $(ref.get-iam-policy)
    gcpIamPolicyPatch:
      add:
      - role: roles/owner
        members:
        - serviceAccount:$(ref.{{ deployment }}-svc-account.email)
      - role: roles/pubsub.subscriber
        members:
        - serviceAccount:$(ref.{{ deployment }}-svc-account.email)

outputs:
{% for typeSuffix, endpoint in K8S_ENDPOINTS.iteritems() %}
- name: clusterType{{ typeSuffix }}
  value: {{ TYPE_NAME }}{{ typeSuffix }}
{% endfor %}

